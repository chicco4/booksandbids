integrate cors library

add a scheduler code that closes auctions and if ok sets winner if time comes, while handling notifications

add a seed.ts

Traslations using angular i18n

Aggiungere status succeded e failed on auction model

Togliere winnerbid che tanto lo trovo

Moderator chiamarlo admin

Immagini in base64 come stringa sul db 255 length

remember to use destructuring, Concurrent Asynchronous Operations (Promise.all), Clean Object Creation ({ username: username } becomes { username })

```
// Use `Promise.all` to check if both username and email exist concurrently
    const [existingUsername, existingEmail] = await Promise.all([
      userModel.findOne({ username }).exec(),
      userModel.findOne({ email }).exec(),
    ]);

```

elimina inutili routes che rendono il progetto inutilmente complesso e concentrati nel imlpementare bene le funzionalita richieste dal prof:
- tipo elimina le deleteAll che sono inutili
- rendi piu personali con authenticatedUserId le creazioni delle cose e gli update
- aggiungi getBidsByAuctionId

dovrei controllare che start date e end date sono corretti da backend e in caso restituire http error alla creazione.
poi fare in modo che se la start date e passata lo status dell'auction sia settata su active, altrimente se lo start date deve ancora arrivare da mettere in waiting, non puo essere gia in ended

poi fare uno scheduler che checka tutte le auction (waiting) e le attiva se sono da attivare.

make seed.ts for starting dummy data in db

implement openapi documentation with swagger.io as https://www.youtube.com/watch?v=5aryMKiBEKY

implement CD/CI pipeline with github actions

we shold create a services folder to separate xpress or any HTTP-specific elements and data and logic.
1. Controller receives a request -> validates input -> calls a Service function.
2. Service processes data or fetches data from a Model (database).
3. Controller receives data from the Service and sends an appropriate HTTP response.

add websocket to manage real time messages

start using JWT tokens as authentication